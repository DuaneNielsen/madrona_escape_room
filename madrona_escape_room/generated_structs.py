"""
Auto-generated Python ctypes structures from compiled binary.
Generated by pahole during build process.
DO NOT EDIT - this file is automatically regenerated.
"""

import ctypes


class CompiledLevel(ctypes.Structure):
    _fields_ = [
        ("num_tiles", ctypes.c_int32),
        ("max_entities", ctypes.c_int32),
        ("width", ctypes.c_int32),
        ("height", ctypes.c_int32),
        ("world_scale", ctypes.c_float),
        ("done_on_collide", ctypes.c_bool),
        ("level_name", ctypes.c_char * 64),
        ("_pad_85", ctypes.c_byte * 3),
        ("world_min_x", ctypes.c_float),
        ("world_max_x", ctypes.c_float),
        ("world_min_y", ctypes.c_float),
        ("world_max_y", ctypes.c_float),
        ("world_min_z", ctypes.c_float),
        ("world_max_z", ctypes.c_float),
        ("num_spawns", ctypes.c_int32),
        ("spawn_x", ctypes.c_float * 8),
        ("spawn_y", ctypes.c_float * 8),
        ("spawn_facing", ctypes.c_float * 8),
        ("object_ids", ctypes.c_int32 * 1024),
        ("tile_x", ctypes.c_float * 1024),
        ("tile_y", ctypes.c_float * 1024),
        ("tile_z", ctypes.c_float * 1024),
        ("tile_persistent", ctypes.c_bool * 1024),
        ("tile_render_only", ctypes.c_bool * 1024),
        ("tile_entity_type", ctypes.c_int32 * 1024),
        ("tile_response_type", ctypes.c_int32 * 1024),
        ("tile_scale_x", ctypes.c_float * 1024),
        ("tile_scale_y", ctypes.c_float * 1024),
        ("tile_scale_z", ctypes.c_float * 1024),
        ("tile_rot_w", ctypes.c_float * 1024),
        ("tile_rot_x", ctypes.c_float * 1024),
        ("tile_rot_y", ctypes.c_float * 1024),
        ("tile_rot_z", ctypes.c_float * 1024),
        ("tile_rand_x", ctypes.c_float * 1024),
        ("tile_rand_y", ctypes.c_float * 1024),
        ("tile_rand_z", ctypes.c_float * 1024),
        ("tile_rand_rot_z", ctypes.c_float * 1024),
        ("tile_rand_scale_x", ctypes.c_float * 1024),
        ("tile_rand_scale_y", ctypes.c_float * 1024),
        ("tile_rand_scale_z", ctypes.c_float * 1024),
    ]


# CompiledLevel size: 84180 bytes
assert (
    ctypes.sizeof(CompiledLevel) == 84180
), f"CompiledLevel size mismatch: {ctypes.sizeof(CompiledLevel)} != 84180"


class Action(ctypes.Structure):
    _fields_ = [
        ("moveAmount", ctypes.c_int32),
        ("moveAngle", ctypes.c_int32),
        ("rotate", ctypes.c_int32),
    ]


# Action size: 12 bytes
assert ctypes.sizeof(Action) == 12, f"Action size mismatch: {ctypes.sizeof(Action)} != 12"


class SelfObservation(ctypes.Structure):
    _fields_ = [
        ("globalX", ctypes.c_float),
        ("globalY", ctypes.c_float),
        ("globalZ", ctypes.c_float),
        ("maxY", ctypes.c_float),
        ("theta", ctypes.c_float),
    ]


# SelfObservation size: 20 bytes
assert (
    ctypes.sizeof(SelfObservation) == 20
), f"SelfObservation size mismatch: {ctypes.sizeof(SelfObservation)} != 20"


class Done(ctypes.Structure):
    _fields_ = [
        ("v", ctypes.c_int32),
    ]


# Done size: 4 bytes
assert ctypes.sizeof(Done) == 4, f"Done size mismatch: {ctypes.sizeof(Done)} != 4"


class Reward(ctypes.Structure):
    _fields_ = [
        ("v", ctypes.c_float),
    ]


# Reward size: 4 bytes
assert ctypes.sizeof(Reward) == 4, f"Reward size mismatch: {ctypes.sizeof(Reward)} != 4"


class Progress(ctypes.Structure):
    _fields_ = [
        ("maxY", ctypes.c_float),
    ]


# Progress size: 4 bytes
assert ctypes.sizeof(Progress) == 4, f"Progress size mismatch: {ctypes.sizeof(Progress)} != 4"


class StepsRemaining(ctypes.Structure):
    _fields_ = [
        ("t", ctypes.c_uint32),
    ]


# StepsRemaining size: 4 bytes
assert (
    ctypes.sizeof(StepsRemaining) == 4
), f"StepsRemaining size mismatch: {ctypes.sizeof(StepsRemaining)} != 4"


class ReplayMetadata(ctypes.Structure):
    _fields_ = [
        ("magic", ctypes.c_uint32),
        ("version", ctypes.c_uint32),
        ("sim_name", ctypes.c_char * 64),
        ("level_name", ctypes.c_char * 64),
        ("num_worlds", ctypes.c_uint32),
        ("num_agents_per_world", ctypes.c_uint32),
        ("num_steps", ctypes.c_uint32),
        ("actions_per_step", ctypes.c_uint32),
        ("timestamp", ctypes.c_uint64),
        ("seed", ctypes.c_uint32),
        ("reserved", ctypes.c_uint32 * 7),
    ]


# ReplayMetadata size: 192 bytes
assert (
    ctypes.sizeof(ReplayMetadata) == 192
), f"ReplayMetadata size mismatch: {ctypes.sizeof(ReplayMetadata)} != 192"


class ManagerConfig(ctypes.Structure):
    _fields_ = [
        ("exec_mode", ctypes.c_int),
        ("gpu_id", ctypes.c_int),
        ("num_worlds", ctypes.c_uint32),
        ("rand_seed", ctypes.c_uint32),
        ("auto_reset", ctypes.c_bool),
        ("enable_batch_renderer", ctypes.c_bool),
        ("_pad_18", ctypes.c_byte * 2),
        ("batch_render_view_width", ctypes.c_uint32),
        ("batch_render_view_height", ctypes.c_uint32),
    ]


# ManagerConfig size: 28 bytes
assert (
    ctypes.sizeof(ManagerConfig) == 28
), f"ManagerConfig size mismatch: {ctypes.sizeof(ManagerConfig)} != 28"


# Import proper constant from generated_constants
from madrona_escape_room.generated_constants import limits

# Use the constant defined in consts.hpp
MAX_TILES = limits.maxTiles
MAX_SPAWNS = limits.maxSpawns
