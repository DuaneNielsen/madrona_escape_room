"""
Auto-generated Python constants from C++ headers.
Generated by libclang AST parsing during build process.
DO NOT EDIT - this file is automatically regenerated.
"""

# ruff: noqa


class EntityType:
    """Enum from madEscape"""

    __slots__ = ()

    NoEntity = 0
    Cube = 1
    Wall = 2
    Agent = 3
    NumTypes = 4

class Result:
    """Enum from madEscape"""

    __slots__ = ()

    Success = 0
    ErrorNullPointer = -1
    ErrorInvalidParameter = -2
    ErrorAllocationFailed = -3
    ErrorNotInitialized = -4
    ErrorCudaFailure = -5
    ErrorFileNotFound = -6
    ErrorInvalidFile = -7
    ErrorFileIO = -8

class ArchetypeFlags:
    """Enum from madrona"""

    __slots__ = ()

    None_ = 0  # Renamed from 'None' (Python keyword)
    ImportOffsets = 1

class ComponentFlags:
    """Enum from madrona"""

    __slots__ = ()

    None_ = 0  # Renamed from 'None' (Python keyword)
    ExportMemory = 1
    ImportMemory = 2
    CudaReserveMemory = 4
    CudaAllocMemory = 8

class ExecMode:
    """Enum from madrona"""

    __slots__ = ()

    CPU = 0
    CUDA = 1

class Op:
    """Enum from madrona.Transaction"""

    __slots__ = ()

    Make = 0
    Destroy = 1
    Modify = 2

class ResponseType:
    """Enum from madrona.phys"""

    __slots__ = ()

    Dynamic = 0
    Kinematic = 1
    Static = 2

class Type:
    """Enum from madrona.phys.JointConstraint"""

    __slots__ = ()

    Fixed = 0
    Hinge = 1

class Type:
    """Enum from madrona.phys.CollisionPrimitive"""

    __slots__ = ()

    Sphere = 1
    Hull = 2
    Plane = 4

class Solver:
    """Enum from madrona.phys.PhysicsSystem"""

    __slots__ = ()

    XPBD = 0
    TGS = 1

class Type:
    """Enum from madrona.render.LightDesc"""

    __slots__ = ()

    Directional = -1
    Spotlight = 0

class unnamed_enum_at_home_duane_madrona_escape_room_src_external_madrona_include_madrona_render_ecs_hpp_123_5:
    """Enum from madrona.render.MaterialOverride"""

    __slots__ = ()

    UseDefaultMaterial = -1
    UseOverrideColor = -2

class RenderMode:
    """Enum from madrona.render.RenderManager.Config"""

    __slots__ = ()

    RGBD = 0
    Depth = 1

class TensorElementType:
    """Enum from madrona.py"""

    __slots__ = ()

    UInt8 = 0
    Int8 = 1
    Int16 = 2
    Int32 = 3
    Int64 = 4
    Float16 = 5
    Float32 = 6

class SourceTextureFormat:
    """Enum from madrona.imp"""

    __slots__ = ()

    R8G8B8A8 = 0
    BC7 = 1

class consts:
    """Constants from consts namespace"""

    __slots__ = ()

    agentRadius = 1.0
    deltaT = 0.04
    episodeLen = 200
    lidarHeightOffset = 0.5
    lidarMaxRange = 200.0
    # maxMoveAmountValue = numMoveAmountBuckets-1  # TODO: Resolve expression
    # maxMoveAngleValue = numMoveAngleBuckets-1  # TODO: Resolve expression
    # maxTurnValue = numTurnBuckets-1  # TODO: Resolve expression
    numActionComponents = 3
    numAgents = 1
    numLidarSamples = 128
    numMoveAmountBuckets = 4
    numMoveAngleBuckets = 8
    numPhysicsSubsteps = 4.0
    numRooms = 1
    numTurnBuckets = 5
    rewardPerDist = 0.05
    slackReward = -0.005
    wallWidth = 1.0
    worldLength = 40.0
    worldWidth = 20.0

    class action:
        """Constants from action namespace"""

        __slots__ = ()

        class move_amount:
            """Constants from move_amount namespace"""

            __slots__ = ()

            FAST = 3
            MEDIUM = 2
            SLOW = 1
            STOP = 0

        class move_angle:
            """Constants from move_angle namespace"""

            __slots__ = ()

            BACKWARD = 4
            BACKWARD_LEFT = 5
            BACKWARD_RIGHT = 3
            FORWARD = 0
            FORWARD_LEFT = 7
            FORWARD_RIGHT = 1
            LEFT = 6
            RIGHT = 2

        class rotate:
            """Constants from rotate namespace"""

            __slots__ = ()

            FAST_LEFT = 0
            FAST_RIGHT = 4
            NONE = 2
            SLOW_LEFT = 1
            SLOW_RIGHT = 3


    class display:
        """Constants from display namespace"""

        __slots__ = ()

        cameraRotationAngle = 30.0
        defaultBatchRenderSize = 64
        defaultCameraDist = 10.0
        defaultSimTickRate = 20
        defaultSpacing = 5
        defaultWindowHeight = 1080
        defaultWindowWidth = 1920
        largeSpacing = 10
        standardSpacing = 7
        viewerRotationFactor = 0.4

    class fileFormat:
        """Constants from fileFormat namespace"""

        __slots__ = ()

        defaultSeed = 5
        levelMagicLength = 5
        replayMagicLength = 7

    class limits:
        """Constants from limits namespace"""

        __slots__ = ()

        maxAgentsPerWorld = 100
        maxCoordinate = 1000.0
        maxGridSize = 64
        maxLevelNameLength = 64
        maxNameLength = 64
        maxScale = 100.0
        maxSpawns = 8
        maxTiles = 1024
        maxWorlds = 10000

    class math:
        """Constants from math namespace"""

        __slots__ = ()

        cameraFovYDegrees = 0.075
        cameraZNear = 0.75
        degreesInHalfCircle = 180.0
        degreesToRadians = "pi/180.0"
        pi = 3.14159265359
        quaternionConversionFactor = 2.0
        radiansToDegrees = "180.0f/pi"

    class performance:
        """Constants from performance namespace"""

        __slots__ = ()

        defaultBufferSize = 4096
        defaultDecimalPlaces = 10
        frameLoggingInterval = 100
        importErrorBufferSize = 1024
        maxProgressEntries = 1000

    class physics:
        """Constants from physics namespace"""

        __slots__ = ()

        agentInverseMass = 1.0
        cubeDynamicFriction = 0.75
        cubeInverseMass = 0.075
        cubeStaticFriction = 0.5
        gravityAcceleration = 9.8
        planeInverseMass = 0.0
        standardDynamicFriction = 0.5
        standardStaticFriction = 0.5
        wallInverseMass = 0.0

        class objectIndex:
            """Constants from objectIndex namespace"""

            __slots__ = ()

            agent = 2
            cube = 0
            plane = 3
            wall = 1


    class rendering:
        """Constants from rendering namespace"""

        __slots__ = ()

        agentHeightMultiplier = 1.5
        agentSpacing = 2.0
        cameraFovYDegrees = 100.0
        cameraFovYDegreesLidar = 1.55
        cameraZNear = 0.001
        cubeHeightRatio = 1.5
        cubeScaleFactor = 2.0
        lightPositionZ = -2.0
        numOriginMarkerBoxes = 3
        wallHeight = 2.0

        class colors:
            """Constants from colors namespace"""

            __slots__ = ()

            agentGray = 230
            axisBlue = 230
            axisGreen = 230
            axisRed = 230
            blueGreen = 20
            blueRed = 20
            cubeBlue = 10
            cubeGreen = 108
            cubeRed = 191
            greenBlue = 20
            greenRed = 20
            redBlue = 20
            redGreen = 20
            yellowBlue = 20
            yellowGreen = 230
            yellowRed = 230

        class gizmo:
            """Constants from gizmo namespace"""

            __slots__ = ()

            axisMarkerLength = 1.5
            axisMarkerOffset = 0.75
            axisMarkerThickness = 0.3

        class material:
            """Constants from material namespace"""

            __slots__ = ()

            agentBodyMetallic = 1.0
            agentBodyRoughness = 0.5
            defaultMetallic = 0.2
            defaultRoughness = 0.8
            floorAlpha = 0.0

        class materialIndex:
            """Constants from materialIndex namespace"""

            __slots__ = ()

            agentBody = 2
            agentParts = 3
            axisX = 5
            axisY = 7
            axisZ = 8
            button = 6
            cube = 0
            floor = 4
            wall = 1

        class normalizedColors:
            """Constants from normalizedColors namespace"""

            __slots__ = ()

            floorBrownBlue = 0.3
            floorBrownGreen = 0.3
            floorBrownRed = 0.5
            wallGray = 0.4
            white = 1.0


    class viewer:
        """Constants from viewer namespace"""

        __slots__ = ()

        actionComponentsPerAgent = 3
        dlpackInt64Bits = 64
        dlpackVersionMinor = 5


class limits:
    """Constants from limits namespace"""

    __slots__ = ()

    maxAgentsPerWorld = 100
    maxCoordinate = 1000.0
    maxGridSize = 64
    maxLevelNameLength = 64
    maxNameLength = 64
    maxScale = 100.0
    maxSpawns = 8
    maxTiles = 1024
    maxWorlds = 10000

class AssetIDs:
    """Constants from AssetIDs namespace"""

    __slots__ = ()

    AGENT = 3
    AXIS_X = 5
    AXIS_Y = 6
    AXIS_Z = 7
    CUBE = 1
    CYLINDER = 8
    DYNAMIC_START = 32
    INVALID = 0
    LIDAR_RAY = 9
    MAX_ASSETS = 256
    PLANE = 4
    WALL = 2

# Convenience aliases for common use
action = consts.action
asset_ids = AssetIDs

__all__ = [
    "EntityType",
    "Result",
    "ArchetypeFlags",
    "ComponentFlags",
    "ExecMode",
    "Op",
    "ResponseType",
    "Type",
    "Type",
    "Solver",
    "Type",
    "unnamed_enum_at_home_duane_madrona_escape_room_src_external_madrona_include_madrona_render_ecs_hpp_123_5",
    "RenderMode",
    "TensorElementType",
    "SourceTextureFormat",
    "consts",
    "limits",
    "AssetIDs",
    "action",
    "asset_ids",
]